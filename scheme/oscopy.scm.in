;; -*- Scheme -*-
;;
;; $Id$
;;
;; Copyright (C) 2010 - 2016 Arnaud Gardelein
;;
;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2 of the License, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, write to the Free Software
;; Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
;;
;;

(use-modules (ice-9 binary-ports))
(use-modules (ice-9 popen))
(use-modules (ice-9 rdelim))
(use-modules (ice-9 regex))
(use-modules (ice-9 format))

(define port (open-pipe "gschem --version" OPEN_READ))
(define version_list (string-split
	    (match:substring
	     (string-match "[0-9]{,2}\\.[0-9]{,2}\\.[0-9]{,2}"
			   (read-line port))
	     ) #\.))
(close-pipe port)
(define gschem_version (+ (* (string->number (list-ref version_list 0)) 10000)
		       (* (string->number (list-ref version_list 1)) 100)
		       (* (string->number (list-ref version_list 2)) 1)))
;; (display gschem_version)

(define oscopy:bindir "@BINDIR@")
(define oscopy:pythonpath "@PYEXECDIR@")
(define GSCHEM_VERSION_THRESHOLD 10900)

(define oscopy:oscopy-cmd-list
  (let ((color-term (getenv "COLORTERM")))
    `(,(if color-term "gnome-terminal" "xterm") "-e" "'ioscopy'")))

(define oscopy:dbus-oscopy-is-running-cmd "dbus-send --print-reply --session --dest=org.gtk.oscopy /org/gtk/oscopy org.gtk.Actions.List")
(define oscopy:dbus-oscopy-update-cmd "ioscopy-activate-action.py update_files")
(define oscopy:dbus-oscopy-run_netnsim-cmd "ioscopy-activate-action.py run_netnsim")

;; Menu
(define (oscopy:about)
  (gschem-msg (string-append
               "This is the oscopy major mode for gschem\n"
               "oscopy.scm\n"
               "This is highly experimental\n"
               "You should save your work often\n"
               "and keep backup copies.  You have\n"
               "been warned.\n"
               )
              )
  )

(define (oscopy:is-running)
  (eq? (status:exit-val (system oscopy:dbus-oscopy-is-running-cmd)) 0))

(define (prepend-var-to-env-path path var)
  (setenv path (string-append var ":" (getenv path))))

(define (oscopy:run-oscopy)
  (and (prepend-var-to-env-path "PATH" oscopy:bindir)
       (setenv "PYTHONPATH"
               (string-append "/usr/local/lib/python3.4/site-packages/"
                              ":"
                              oscopy:pythonpath))
       (apply system* oscopy:oscopy-cmd-list)))

(define (oscopy:launch-oscopy)
  (if (oscopy:is-running)
      (if (gschem-confirm (string-append "An instance of oscopy is already running\n"
                                         "Launch anyway ?"))
          (oscopy:run-oscopy))
      (oscopy:run-oscopy)))

(define (oscopy:update-oscopy)
  (if (oscopy:is-running)
      (system oscopy:dbus-oscopy-update-cmd)
      (if (gschem-confirm (string-append "No running instance of oscopy\n"
                                         "Launch oscopy ?"))
          (oscopy:run-oscopy))))

(define (oscopy:run_netnsim-oscopy)
  (if (oscopy:is-running)
      (system oscopy:dbus-oscopy-run_netnsim-cmd)
      (if (gschem-confirm (string-append "No running instance of oscopy\n"
                                         "Launch oscopy ?"))
          (oscopy:run-oscopy))))

;;; Define Oscopy keymap
(if (> gschem_version GSCHEM_VERSION_THRESHOLD)
    ((global-set-key "<Shift>O A" 'oscopy:about)
     (global-set-key "<Shift>O L" 'oscopy:launch-oscopy)
     (global-set-key "<Shift>O R" 'oscopy:run_netnsim-oscopy)
     (global-set-key "<Shift>O U" 'oscopy:update-oscopy)
     )
    )
(define oscopy:oscopy-keymap
  (if (< gschem_version GSCHEM_VERSION_THRESHOLD)
      '(
	("?" . oscopy:about)
	("l" . oscopy:launch-oscopy)
	("r" . oscopy:run_netnsim-oscopy)
	("u" . oscopy:update-oscopy)
	)
      )
  )

(define oscopy:menu-items #t)
(if (> gschem_version GSCHEM_VERSION_THRESHOLD)
    (set! oscopy:menu-items 
	  ;;  menu item name        menu action          menu stock icon
	  `((,(N_ "_About...")      oscopy:about         "gtk-help")
	    (,(N_ "_Launch oscopy") oscopy:launch-oscopy "gtk-execute")
	    (,(N_ "_Run netlister and simulator from oscopy") oscopy:run_netnsim-oscopy "gtk-execute")
	    (,(N_ "_Update oscopy") oscopy:update-oscopy "gtk-execute")))
    (set! oscopy:menu-items
	  '( ("About..."     oscopy:about    oscopy:about)
	     ("Launch oscopy" oscopy:launch-oscopy oscopy:launch-oscopy)
	     ("Run netlister and simulator from oscopy" oscopy:run_netnsim-oscopy oscopy:run_netnsim-oscopy)
	     ("Update oscopy" oscopy:update-oscopy oscopy:update-oscopy)
	     ))
)

;;; Add Oscopy menu
(if (> gschem_version GSCHEM_VERSION_THRESHOLD)
    (begin
      ;; (begin...) is necessary here for guile 2.0.
      ;; See 'info guile' "R6RS Incompatibilities" for information on bug related
      ;; to syntax-transformers in top-level programs (N_ is a syntax transformer)
      (add-menu (N_ "_Oscopy") oscopy:menu-items)
      )
    (add-menu "oscopy" oscopy:menu-items)
    )


