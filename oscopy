#!/usr/bin/python
import readline
import os.path
import sys
import re
from optparse import OptionParser
from Oscopy.Oscopy import Oscopy
# Some variables
hist_file = ".oscopy_hist"

# Readline configuration
if not os.path.exists(hist_file):
    f = open(hist_file, "w")
    f.write("figlist")
    f.close()
readline.read_history_file(hist_file)

# Parse command line arguments
# Current options:
#   -b : batch mode, read commands from file
#   -i : interactive mode, do not quit at the end of batch file
#   -q : do not display startup message
parser = OptionParser()
parser.add_option("-b", "--batch", dest="fn", help="Execute commands in FILE then exit", metavar="FILE")
parser.add_option("-i", "--interactive", action="store_true", dest="inter", help="Go to interactive mode after executing batch file")
parser.add_option("-q", "--quiet", action="store_true", dest="quiet", help="Do not display startup message")
(options, args) = parser.parse_args()
if options.fn is None:
    f = None
else:
    try:
        f = open(options.fn, 'r')
    except IOError, e:
        print "Unable to access batch file:", e
        f = None
if options.inter == True:
    batch = False
else:
    batch = True

# Prompt
p = "oscopy> "
o = Oscopy()

# Startup message
if options.quiet is None:
    print "This is oscopy, a program to view electrical simulation results\n\
Copyright (C) 2009 Arnaud Gardelein.\n\
This is free software, you are invited to redistribute it \n\
under certain conditions.\n\
There is ABSOLUTELY NO WARRANTY; not even for MERCHANTIBILITY or\n\
FITNESS FOR A PARTICULAR PURPOSE."

# Start main loop
o.loop(p, f, batch)

readline.write_history_file(hist_file)

